{"version":3,"sources":["web/front/src/semapps-schema/semapps-schema.js"],"names":["Polymer","is","properties","route","type","Object","observer","pins","Array","value","pinsRegistry","_routeChanged","this","updateVisibility","attached","ready","$gvMap","$","document","getElementById","$mapZones","find","hoverActive","semapps","schema","SemAppsCarto","start","bind","_this","each","buildings","building","push","on","e","buildingHighlight","currentTarget","getAttribute","split","buildingHighlightOff","key","buildingClick","scrollToContent","buildingSelect","buildingSelected","mapIsOver","buildingHighlighted","zone","zoneGet","classList","add","remove","buildingHideAll","_this2","mapTimeout","clearTimeout","setTimeout","buildingHighlightReset","activate","method","index","domSearchTextInput","reloadSearch","deselect","selected","buildingSelectedAll","select","goSearch","pinShow","text","show","pinShowOne","pinHideAll","pinHide","hide"],"mappings":"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","file":"semapps-schema.min.js","sourcesContent":["Polymer({\n  is: 'semapps-schema',\n\n  properties: {\n    route: {\n      type: Object,\n      observer: '_routeChanged'\n    },\n    pins: {\n      type: Array,\n      value: []\n    },\n    pinsRegistry: {\n      type: Object,\n      value: {}\n    }\n  },\n\n  _routeChanged: function () {\n    this.updateVisibility();\n  },\n\n  // Wait all HTML to be loaded.\n  attached() {\n    this.ready = false;\n    this.$gvMap = $(document.getElementById('gv-map'));\n    this.$mapZones = this.$gvMap.find('.mapZone');\n    this.hoverActive = true;\n\n    // Global ref.\n      semapps.schema = this;\n\n    // Wait for buildings to be loaded.\n      SemAppsCarto.ready(this.start.bind(this));\n  },\n\n  start() {\n    \"use strict\";\n\n    // Create pins.\n    let pins = [];\n    $.each(semapps.buildings, (building) => {\n        pins.push(building);\n    });\n\n    this.pins = pins;\n\n    // Bind events.\n    this.$mapZones\n      .on('mouseover', (e) => {\n        this.hoverActive && this.buildingHighlight(e.currentTarget.getAttribute('id').split('-')[1]);\n      })\n      .on('mouseout', (e) => {\n        this.hoverActive && this.buildingHighlightOff(e.currentTarget.getAttribute('id').split('-')[1]);\n      })\n      // Click.\n      .on('click', (e) => {\n        let key = e.currentTarget.getAttribute('id').split('-')[1];\n        // Launch search.\n        this.buildingClick(key);\n        // Disable hover temporally.\n        this.hoverActive = false;\n        // Scroll.\n          semapps.scrollToContent(() => {\n          \"use strict\";\n          this.hoverActive = true;\n        });\n      });\n\n    this.buildingSelect(semapps.buildingSelected, false);\n  },\n\n  buildingHighlight(key) {\n    // Deselect if already selected.\n    this.buildingHighlightOff();\n    this.mapIsOver = true;\n    this.buildingHighlighted = key;\n    let zone = this.zoneGet(this.buildingHighlighted);\n    if (zone) {\n      zone.classList.add('strong');\n      zone.classList.remove('discreet');\n      // Hide all.\n      this.buildingHideAll(true);\n    }\n    else {\n      // Display all.\n      this.buildingHideAll(false);\n    }\n  },\n\n  buildingHighlightOff() {\n    if (this.buildingHighlighted) {\n      this.zoneGet(this.buildingHighlighted).classList.remove('strong');\n      delete this.buildingHighlighted;\n    }\n    if (this.mapTimeout) {\n      clearTimeout(this.mapTimeout);\n    }\n    this.mapIsOver = false;\n    this.mapTimeout = setTimeout(() => {\n      // Mouse is still not over.\n      if (!this.mapIsOver) {\n        this.buildingHighlightReset();\n      }\n    }, 500);\n  },\n\n  buildingHighlightReset() {\n    this.mapTimeout = false;\n    this.buildingHideAll(false);\n  },\n\n  buildingHideAll(activate) {\n    // Define add or remove class.\n    var method = activate ? 'add' : 'remove';\n    this.$mapZones.each((index, zone) => {\n      // On all paths.\n      zone.classList[method]('discreet');\n    });\n  },\n\n  buildingClick(building) {\n    \"use strict\";\n    // Do not allow building selection and search term in the same time.\n      semapps.domSearchTextInput.value = '';\n      semapps.schema.buildingSelect(building);\n  },\n\n  buildingSelect(building, reloadSearch) {\n    \"use strict\";\n    // Deselect current.\n    this.pinsRegistry[semapps.buildingSelected] && this.pinsRegistry[semapps.buildingSelected].deselect();\n    let selected =\n        semapps.buildingSelected = building || semapps.buildingSelectedAll;\n    // Select new one.\n    this.pinsRegistry[selected] && this.pinsRegistry[selected].select();\n    // Reload by default.\n    (reloadSearch !== false) && semapps.goSearch();\n  },\n\n  zoneGet(key) {\n    return document.getElementById('mapZone-' + key);\n  },\n\n  pinShow(building, text) {\n    \"use strict\";\n    if(this.pinsRegistry[building] != null)\n      this.pinsRegistry[building].show(text);\n  },\n\n  pinShowOne(building, text) {\n    \"use strict\";\n    this.pinHideAll();\n    this.pinShow(building, text);\n  },\n\n  pinHide(building) {\n    \"use strict\";\n    if(this.pinsRegistry[building] != null)\n     this.pinsRegistry[building].hide();\n  },\n\n  pinHideAll() {\n    \"use strict\";\n    $.each(semapps.buildings, (building) => {\n        semapps.schema.pinHide(building);\n    });\n  }\n});\n"]}