{"version":3,"sources":["web/front/src/semapps-results/semapps-results.js"],"names":["Polymer","is","properties","tabFirst","type","Object","value","plural","icon","typeSelected","String","resultsTitle","resultTitle","tabs","Array","tabsRegistry","results","otherArray","searchLastTerm","route","observer","attached","_this","this","semapps","domSearchResults","domId","domLoadingSpinner","$searchThemeFilter","$","SemAppsCarto","ready","typeSel","each","entities","data","counter","push","selectType","tabRegister","component","tab","selection","searchRender","_routeChanged","_this2","prefix","window","split","path","log","search","callsearch","ev","document","getElementById","toggleClass","term","building","_this3","filterUri","val","searchLastFilter","replace","searchError","noResult","style","display","complete","responseJSON","searchQueryLastComplete","ajax","encodeURIComponent","response","_this4","length","set","totalCounter","typesCounter","resultTemps","renderSearchResultResponse","error","map","pinHideAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","result","pins","getAddressToCreatePoint","pinShow","err","return","key","keys","filterNonGrandVoisins","all","entity","setTimeout","$$","classList","remove","add","isgv","filter","checkbox","hasClass","gvArray","forEach","e","innerHTML"],"mappings":"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","file":"semapps-results.min.js","sourcesContent":["Polymer({\n    is: 'semapps-results',\n    properties: {\n        tabFirst: {\n            type: Object,\n            value: {\n                type: 'all',\n                plural: 'Tous',\n                icon: 'list'\n            }\n        },\n        typeSelected: {\n            type: String\n        },\n        resultsTitle: {\n            type: String\n        },\n        resultTitle: {\n            type: String\n        },\n        tabs: {\n            type: Array,\n            value: []\n        },\n        tabsRegistry: {\n            type: Object,\n            value: {}\n        },\n        results: {\n            type: Array,\n            value: []\n        },\n        otherArray: {\n            type: Array,\n            value: []\n        },\n        searchLastTerm: {\n            type: String,\n            value: null\n        },\n        route: {\n            type: Object,\n            observer: '_routeChanged'\n        }\n    },\n\n    attached() {\n        \"use strict\";\n        semapps.results = this;\n        this.domSearchResults = semapps.domId('searchResults');\n        this.domLoadingSpinner = semapps.domId('searchLoadingSpinner');\n        this.$searchThemeFilter = $('#searchThemeFilter');\n        // Wait global settings.\n        SemAppsCarto.ready(() => {\n            let tabs = [];\n            let typeSel = '';\n            $.each(semapps.entities, (type, data) => {\n                data.counter = 0;\n                typeSel = (typeSel == '') ? type : typeSel;\n                tabs.push(data);\n            });\n            this.tabs = tabs;\n            // Activate first tab by default.\n            this.selectType(typeSel);\n        });\n    },\n\n    tabRegister(type, component) {\n        \"use strict\";\n        this.tabsRegistry[type] = component;\n        // Refresh selected tab.\n        this.selectType(this.typeSelected);\n    },\n\n    selectType(tab)  {\n        \"use strict\";\n        this.selection(tab);\n        // Render results.\n        this.searchRender();\n    },\n\n    _routeChanged: function (data) {\n        // We are on the search mode.\n        if (data.prefix === '/rechercher') {\n            // semapps.map.zoomGlobal();\n            // Route change may be fired before init.\n            window.SemAppsCarto.ready(() => {\n                let split = data.path.split('/');\n                log(split)\n                this.search(split[1]);\n            });\n        }\n    },\n\n    callsearch(ev){\n        let checkbox = $(document.getElementById(\"isGV\"));\n        checkbox.toggleClass('checked');\n        this.searchRender();\n    },\n\n    search(term, building) {\n        \"use strict\";\n        let filterUri = this.$searchThemeFilter.val();\n\n        // Term and has not changed.\n        if (semapps.searchLastTerm === term &&\n            // Filter has not changed.\n            semapps.searchLastFilter === filterUri) {\n            // (maybe building changed).\n            this.searchRender();\n            return;\n        }\n        // Cleanup term to avoid search errors.\n        semapps.searchLastTerm =\n            term = (term || '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n        // Save filter.\n        semapps.searchLastFilter = filterUri;\n        this.searchError =\n            this.noResult = false;\n        // Empty page.\n        this.results = [];\n        // Show spinner.\n        this.domLoadingSpinner.style.display = 'block';\n        // Build callback function.\n        let complete = (data) => {\n            this.domLoadingSpinner.style.display = 'none';\n            this.searchRender(data.responseJSON);\n        };\n        // Say that this function is the\n        // only one we expect to be executed.\n        // It prevent to parse multiple responses.\n        this.searchQueryLastComplete = complete;\n        semapps.ajax('webservice/search?' +\n            'term=' + encodeURIComponent(term) +\n            '&filter=' + encodeURIComponent(semapps.searchLastFilter), (data) => {\n            \"use strict\";\n            // Check that we are on the last callback expected.\n            complete === this.searchQueryLastComplete\n            // Continue.\n            && complete(data);\n        });\n    },\n\n    searchRender(response) {\n        \"use strict\";\n        let results = [];\n        // Reset again if just rendering fired.\n        this.searchError =\n            this.noResult = false;\n        this.results.length = 0;\n        this.set('results', []);\n        let totalCounter = 0;\n        let typesCounter = {};\n        let resultTemps = {};\n        // Allow empty response.\n        response = response || this.renderSearchResultResponse || {};\n        // Save last data for potential reload.\n        this.renderSearchResultResponse = response;\n\n        if (response.error) {\n            this.searchError = true;\n        }\n        else if (response.results) {\n            semapps.map.pinHideAll();\n\n            for (let result of response.results) {\n                // Data is allowed.\n                if(semapps.entities[result.type]){\n                    // log(result.type);\n                    typesCounter[result.type] = typesCounter[result.type] || 0;\n                    typesCounter[result.type]++;\n                    totalCounter++;\n                    if (typeof resultTemps[result.type] === 'undefined')\n                        resultTemps[result.type] = [];\n                    resultTemps[result.type].push(result);\n                    // log(resultTemps);\n                    if(result[\"address\"]){\n                        if( semapps.map.pins[result[\"uri\"]] === undefined){\n                            semapps.getAddressToCreatePoint(result[\"address\"],result[\"title\"],result[\"type\"],result[\"uri\"]);\n                        }\n                        else{\n                            semapps.map.pinShow(result[\"uri\"]);\n                        }\n                    }\n                }\n            }\n            \n            this.resultsTitle = '';\n            // semapps.map.pinShowAll();\n            if(typeof resultTemps[this.typeSelected] === 'undefined' ){\n                // Deselect tab if current.\n                let key = Object.keys(resultTemps)[0];\n                this.selection(key);\n                results =(typeof resultTemps[this.typeSelected] !== 'undefined' )? resultTemps[Object.keys(resultTemps)[0]] : [];\n            }\n            else{\n                this.otherArray = [];\n                results = this.filterNonGrandVoisins(resultTemps[this.typeSelected]);\n            }\n\n            if(this.typeSelected === \"http://virtual-assembly.org/pair#Organization\"){\n                this.set('orga', true);\n            } else {\n                this.set('orga', false);\n            }\n\n            // Create title.\n            // Results number.\n\n            // Display title.\n            //this.resultsTitle = resultsTitle;\n            this.resultsTitle += (results.length) ? results.length + ' résultats ' : 'Aucun résultat  ';\n            // Display no results section or not.\n            this.noResult = results.length === 0;\n\n        }\n\n        this.tabsRegistry.all && (this.tabsRegistry.all.counter = totalCounter);\n        for (let entity in semapps.entities){\n            this.tabsRegistry[entity] && (this.tabsRegistry[entity].counter = typesCounter[entity] || 0);\n        }\n        setTimeout(() => {\n            if(this.otherArray.length != 0){\n                this.set('otherArray', this.otherArray);\n            }\n            this.set('results', results);\n        }, 100);\n    },\n\n    selection(val){\n        if (this.typeSelected && this.tabsRegistry[val]) {\n            this.tabsRegistry[this.typeSelected].$$('li').classList.remove('active');\n        }\n        // Save.\n        this.typeSelected = val;\n        // It may not be already created.\n        if (this.tabsRegistry[val]) {\n            this.tabsRegistry[val].$$('li').classList.add('active');\n        }\n    },\n\n    filterNonGrandVoisins(results){ //TODO: A faire de maniere plus generique\n        let isgv = true;\n        let filter = document.getElementById(\"orgaGvFilter\");\n        let checkbox = document.getElementById(\"isGV\");\n\n        if ($(checkbox).hasClass('checked') == true){\n            isgv = true;\n\n        } else {\n            isgv = false;\n        }\n        this.otherArray = [];        \n        if (this.typeSelected === \"http://virtual-assembly.org/pair#Organization\"){\n            filter.style.display = \"initial\";\n            let filteredResults = [];\n            let gvArray = [];\n            let otherArray = [];\n            this.otherArray = [];\n\n            results.forEach((e) => {\n                if (e[\"address\"] === \"74 Avenue Denfert-Rochereau 75014 Paris\" ||\n                e[\"address\"] === \"72 Avenue Denfert-Rochereau 75014 Paris\" ||\n                e[\"address\"] === \"82 Avenue Denfert-Rochereau 75014 Paris\"){\n                    e[\"gv\"] = true;\n                    gvArray.push(e);\n                } else {\n                    e[\"gv\"] = false;\n                    otherArray.push(e);\n                }\n            });\n\n            results = gvArray;\n            if (isgv === false){\n                this.otherArray = otherArray;\n            }\n\n        } else{\n            filter.style.display = \"none\";\n        }\n        this.resultsTitle += (results.length + this.otherArray.length) ? results.length + this.otherArray.length + ' résultats ' : 'Aucun résultat  ';\n        document.getElementById(\"resultstitle\").innerHTML = this.resultsTitle; //TODO: a improve\n        return results;\n    }\n});\n"]}