{"version":3,"sources":["web/front/src/semapps-results/semapps-results.js"],"names":["Polymer","is","properties","tabFirst","type","Object","value","plural","icon","typeSelected","String","tabs","Array","tabsRegistry","results","otherArray","searchLastTerm","route","observer","attached","_this","this","semapps","domSearchResults","domId","domLoadingSpinner","$searchThemeFilter","$","SemAppsCarto","ready","typeSel","each","entities","data","counter","push","selectType","tabRegister","component","tab","selection","searchRender","_routeChanged","_this2","prefix","window","split","path","search","callsearch","ev","document","getElementById","toggleClass","term","building","_this3","filterUri","val","searchLastFilter","replace","searchError","noResult","style","display","complete","responseJSON","searchQueryLastComplete","ajax","encodeURIComponent","response","_this4","length","set","totalCounter","typesCounter","resultTemps","buildingsCounter","renderSearchResultResponse","error","map","pinHideAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","result","buildingSelected","buildingSelectedAll","buildings","pins","getAddressToCreatePoint","pinShow","err","return","filterNonGrandVoisins","resultsTitle","domInner","innerHTML","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","inner","createElement","nameType","toLowerCase","parent","appendChild","schema","all","entity","setTimeout","$$","classList","remove","add","isgv","filter","checkbox","hasClass","gvArray","forEach","e"],"mappings":"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","file":"semapps-results.min.js","sourcesContent":["Polymer({\n    is: 'semapps-results',\n    properties: {\n        tabFirst: {\n            type: Object,\n            value: {\n                type: 'all',\n                plural: 'Tous',\n                icon: 'list'\n            }\n        },\n        typeSelected: {\n            type: String\n        },\n        tabs: {\n            type: Array,\n            value: []\n        },\n        tabsRegistry: {\n            type: Object,\n            value: {}\n        },\n        results: {\n            type: Array,\n            value: []\n        },\n        otherArray: {\n            type: Array,\n            value: []\n        },\n        searchLastTerm: {\n            type: String,\n            value: null\n        },\n        route: {\n            type: Object,\n            observer: '_routeChanged'\n        }\n    },\n\n    attached() {\n        \"use strict\";\n        semapps.results = this;\n        this.domSearchResults = semapps.domId('searchResults');\n        this.domLoadingSpinner = semapps.domId('searchLoadingSpinner');\n        this.$searchThemeFilter = $('#searchThemeFilter');\n        // Wait global settings.\n        SemAppsCarto.ready(() => {\n            let tabs = [];\n            let typeSel = '';\n            $.each(semapps.entities, (type, data) => {\n                data.counter = 0;\n                typeSel = (typeSel == '') ? type : typeSel;\n                tabs.push(data);\n            });\n            this.tabs = tabs;\n            // Activate first tab by default.\n            this.selectType(typeSel);\n        });\n    },\n\n    tabRegister(type, component) {\n        \"use strict\";\n        this.tabsRegistry[type] = component;\n        // Refresh selected tab.\n        this.selectType(this.typeSelected);\n    },\n\n    selectType(tab)  {\n        \"use strict\";\n        this.selection(tab);\n        // Render results.\n        this.searchRender();\n    },\n\n    _routeChanged: function (data) {\n        // We are on the search mode.\n        if (data.prefix === '/rechercher') {\n            // semapps.map.zoomGlobal();\n            // Route change may be fired before init.\n            window.SemAppsCarto.ready(() => {\n                let split = data.path.split('/');\n                //log(split)\n                this.search(split[2],split[1]);\n            });\n        }\n    },\n\n    callsearch(ev){\n        let checkbox = $(document.getElementById(\"isGV\"));\n        checkbox.toggleClass('checked');\n        this.searchRender();\n    },\n\n    search(term, building) {\n        \"use strict\";\n        let filterUri = this.$searchThemeFilter.val();\n\n        // Term and has not changed.\n        if (semapps.searchLastTerm === term &&\n            // Filter has not changed.\n            semapps.searchLastFilter === filterUri) {\n            // (maybe building changed).\n            this.searchRender();\n            return;\n        }\n        // Cleanup term to avoid search errors.\n        semapps.searchLastTerm =\n            term = (term || '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n        // Save filter.\n        semapps.searchLastFilter = filterUri;\n        this.searchError =\n            this.noResult = false;\n        // Empty page.\n        this.results = [];\n        // Show spinner.\n        this.domLoadingSpinner.style.display = 'block';\n        // Build callback function.\n        let complete = (data) => {\n            this.domLoadingSpinner.style.display = 'none';\n            this.searchRender(data.responseJSON);\n        };\n        // Say that this function is the\n        // only one we expect to be executed.\n        // It prevent to parse multiple responses.\n        this.searchQueryLastComplete = complete;\n        semapps.ajax('webservice/search?' +\n            'term=' + encodeURIComponent(term) +\n            '&type=' + encodeURIComponent(this.typeSelected) +\n            '&filter=' + encodeURIComponent(semapps.searchLastFilter), (data) => {\n            \"use strict\";\n            // Check that we are on the last callback expected.\n            complete === this.searchQueryLastComplete\n            // Continue.\n            && complete(data);\n        });\n    },\n\n    searchRender(response) {\n        \"use strict\";\n        let results = [];\n        // Reset again if just rendering fired.\n        this.searchError =\n            this.noResult = false;\n        this.results.length = 0;\n        this.set('results', []);\n        let totalCounter = 0;\n        let typesCounter = {};\n        let resultTemps = {};\n        let buildingsCounter = {};\n        // Allow empty response.\n        response = response || this.renderSearchResultResponse || {};\n        // Save last data for potential reload.\n        this.renderSearchResultResponse = response;\n        if (response.error) {\n            this.searchError = true;\n        }\n        else if (response.results) {\n            semapps.map.pinHideAll();\n            for (let result of response.results) {\n                // Data is allowed.\n                if(semapps.buildingSelected === semapps.buildingSelectedAll || result.building === semapps.buildingSelected ){\n                    // log(result.type);\n                    typesCounter[this.typeSelected] = typesCounter[this.typeSelected] || 0;\n                    typesCounter[this.typeSelected]++;\n                    totalCounter++;\n                    if (semapps.buildings[result.building]) {\n                        buildingsCounter[result.building] = buildingsCounter[result.building] || 0;\n                        buildingsCounter[result.building]++;\n                    }\n                    if (typeof resultTemps[this.typeSelected] === 'undefined')\n                        resultTemps[this.typeSelected] = [];\n                    resultTemps[this.typeSelected].push(result);\n                    // log(resultTemps);\n                    if(result[\"address\"]){\n                        if( semapps.map.pins[result[\"uri\"]] === undefined){\n                            semapps.getAddressToCreatePoint(result[\"address\"],result[\"title\"],result[\"type\"],result[\"uri\"]);\n                        }\n                        else{\n                            semapps.map.pinShow(result[\"uri\"]);\n                        }\n                    }\n                }\n            }\n            //log(resultTemps[this.typeSelected]);\n            this.otherArray = [];\n            results = (typeof resultTemps[this.typeSelected] !== 'undefined' )? resultTemps[this.typeSelected] : [];//resultTemps[this.typeSelected];\n            results = results = this.filterNonGrandVoisins(results);\n            if(this.typeSelected === \"http://virtual-assembly.org/pair#Organization\"){\n                this.set('orga', true);\n            } else {\n                this.set('orga', false);\n            }\n            // Create title.\n            let resultsTitle = '';\n            // Results number.\n            resultsTitle += (results.length) ? results.length + ' résultats ' : 'Aucun résultat  ';\n            // Building.\n            // Display title.\n            this.resultsTitle = resultsTitle;\n\n            // Display no results section or not.\n            this.noResult = results.length === 0;\n            let domInner = document.getElementById('searchResults');\n            domInner.innerHTML = '';\n            // domInner.innerHTML = '';\n            for(let result of results){\n                let inner = document.createElement('semapps-results-'+semapps.entities[this.typeSelected].nameType.toLowerCase());\n                inner.data = result;\n                inner.parent = this;\n                domInner.appendChild(inner);\n            }\n\n            // Show pins with results only.\n            if(typeof semapps.schema !== 'undefined'){\n                semapps.schema.pinHideAll();\n                $.each(semapps.buildings, (building) => {\n                    if (buildingsCounter[building] || building === semapps.buildingSelected) {\n                        semapps.schema.pinShow(building, buildingsCounter[building] || 0);\n                    }\n                });\n            }\n        }\n\n        this.tabsRegistry.all && (this.tabsRegistry.all.counter = totalCounter);\n        for (let entity in semapps.entities){\n            this.tabsRegistry[entity] && (this.tabsRegistry[entity].counter = typesCounter[entity] );\n        }\n        setTimeout(() => {\n            if(this.otherArray.length !== 0){\n                this.set('otherArray', this.otherArray);\n            }\n            this.set('results', results);\n        }, 100);\n    },\n\n    selection(val){\n        if (this.typeSelected && this.tabsRegistry[val]) {\n            this.tabsRegistry[this.typeSelected].$$('li').classList.remove('active');\n        }\n        // It may not be already created.\n        if (this.tabsRegistry[val]) {\n            this.tabsRegistry[val].$$('li').classList.add('active');\n        }\n        if (val !== this.typeSelected ){\n            // Save.\n            this.typeSelected = val;\n            this.search()\n        }\n\n    },\n\n    filterNonGrandVoisins(results){\n        let isgv = true;\n        let filter = document.getElementById(\"orgaGvFilter\");\n        let checkbox = document.getElementById(\"isGV\");\n\n        if ($(checkbox).hasClass('checked') == true){\n            isgv = true;\n        } else {\n            isgv = false;\n        }\n        if (this.typeSelected === \"http://virtual-assembly.org/pair#Organization\"){\n            filter.style.display = \"initial\";\n            let filteredResults = [];\n            let gvArray = [];\n            let otherArray = [];\n\n            results.forEach((e) => {\n                if (e[\"address\"] === \"74 Avenue Denfert-Rochereau 75014 Paris\" ||\n                    e[\"address\"] === \"72 Avenue Denfert-Rochereau 75014 Paris\" ||\n                    e[\"address\"] === \"82 Avenue Denfert-Rochereau 75014 Paris\"){\n                    e[\"gv\"] = true;\n                    gvArray.push(e);\n                } else {\n                    e[\"gv\"] = false;\n                    otherArray.push(e);\n                }\n            });\n\n            if (isgv == true)\n                this.otherArray = [];\n            else\n                this.otherArray = otherArray;\n            results = gvArray;\n        } else{\n            filter.style.display = \"none\";\n        }\n        return results;\n    }\n});\n"]}